
(begin-tx)
(define-namespace 'free (sig-keyset) (sig-keyset))

(env-data
  { 'ns-admin-keyset: []
  , 'ns-genesis-keyset:[]
  , 'ns-operate-keyset:[] })
(load "root/fungible-v2.pact")
(load "root/gas-payer-v1.pact")
(load "root/coin.pact")

(define-namespace 'kip (sig-keyset) (sig-keyset))

(load "kip/account-protocols-v1.pact")
(load "kip/manifest.pact")
(load "kip/universal-token-policy-v1.pact")
(load "kip/universal-poly-fungible-v2.pact")

(define-namespace 'util (sig-keyset) (sig-keyset))
(load "util/fungible-util.pact")
(commit-tx)

(begin-tx)
(env-data
 { 'marmalade-admin: ["marmalade-admin"]
 , 'marmalade-ns-user: ["marmalade-admin"]
 , 'marmalade-ns-admin: ["marmalade-admin"]
 , 'ns: "marmalade"
 , 'upgrade: false })
 (env-sigs [
   { 'key: 'marmalade-admin
    ,'caps: []
    }])

(load "universal-ledger.pact")
(load "kadcars-nft-policy.pact")
(load "kadcar-factory.pact")


(commit-tx)

(begin-tx "creating accounts")


(env-data {"bob": {"keys": ["bob"], "pred": "keys-all"}})
(coin.create-account 'bob (read-keyset 'bob))

(commit-tx)
(begin-tx)
(env-data {"admin": {"keys": ["admin"], "pred": "keys-all"}})
(coin.create-account 'admin (read-keyset 'admin))

(commit-tx)


(begin-tx)
(env-data {"coin-buyer": {"keys": ["coin-buyer"], "pred": "keys-all"}})
(coin.create-account 'coin-buyer (read-keyset 'coin-buyer))

(commit-tx)
;;;;;;; create and Mint first Kadcar NFT ;;;;;;;

(begin-tx "Create & Mint first Kadcar K#1")
(env-hash (hash "create-and-mint"))
(env-data {
   'upgrade: false
  ,'ns: "marmalade"
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}

  ,'f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5: {"keys": ["f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5"], "pred": "keys-all"}

  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}

  , "bob": {"keys": ["bob"], "pred": "keys-all"}
  ,'bob-guard: {"keys": ["bob"], "pred": "keys-all"}
  ,'admin-guard: {"keys": ["bob"], "pred": "keys-all"}
  ,'token_spec: {
    'fungible: coin
    ,'creator: "creator"
    ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
    ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
    ,'royalty-rate: 0.03
    ,'owner: "creator"
    ,'collection-id: "k:2"
  }
  ,'vehicle_spec: {
    'vin: "1"
    ,'make: "Kadcars"
    ,'model: "K2"
  }
  ,'collection-unique-supply:1337
  ,'collection-id:"k:2"
  })
(env-sigs
  [{'key:'dummy
   ,'caps:
    [(free.universal-ledger.MINT "K2#1" "bob" 1.0)
     ]},
   { 'key: 'marmalade-admin
    ,'caps:[]
     },
   { 'key: 'bob
    ,'caps:[]
     }
     ,
     { 'key: 'creator
      ,'caps:[]
       },
       { 'key: 'bob
        ,'caps:[]
         },
     { 'key: 'f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5
      ,'caps:[]
       }
   ])

(use kip.token-manifest)
(use free.universal-ledger)
(coin.create-account "creator" (read-keyset 'creator-guard))
(coin.create-account "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" (read-keyset 'f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5))
(expect "Created collection"
  true
  (free.kadcars-nft-policy.create-collection))

(expect "Create token K2#1"
  "created token true"
  (free.kadcar-factory.create-k2))

  (env-sigs
    [{'key:'mint
     ,'caps:
      [(free.universal-ledger.MINT "Kadcars#K2:1" "bob" 1.0), (coin.TRANSFER "bob" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 1.1)
       ]},
       { 'key: 'bob
        ,'caps:[]
         },
       { 'key: 'marmalade-admin
        ,'caps:[]
         }])
(expect "added WL for bob "
  true
  (free.kadcars-nft-policy.add-whitelist "bob" 0 2)
)


(expect "mint K2#1 to bob, success"
  true
  (mint "Kadcars#K2:1" "bob" (read-keyset 'bob-guard) 1.0))

(expect "Bob is credited"
  1.0
  (get-balance "Kadcars#K2:1" 'bob))

(expect "Create and mint fqp token EVENTS"
 [{"name": "free.universal-ledger.TOKEN","params": ["Kadcars#K2:1" 0 0.0 free.kadcars-nft-policy]}
 ,{"name": "free.universal-ledger.MINT","params": ["Kadcars#K2:1" "bob" 1.0]}
 ,{"name": "coin.TRANSFER","params": ["bob" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 1.1]}
 ,{"name": "free.universal-ledger.ACCOUNT_GUARD","params": ["Kadcars#K2:1" "bob" (read-keyset 'bob-guard)]}
 ,{"name": "free.universal-ledger.RECONCILE","params": ["Kadcars#K2:1" 1.0 {"account": "","current": 0.0,"previous": 0.0} {"account": "bob","current": 1.0,"previous": 0.0}]}
 ,{"name": "free.universal-ledger.SUPPLY","params": ["Kadcars#K2:1" 1.0]}]
(map (remove 'module-hash) (env-events true)))

(commit-tx)


;;;;;;; create and Mint second Kadcar NFT ;;;;;;;

(begin-tx "Create & Mint second Kadcar K:2#2")
(env-hash (hash "create-and-mint-2"))
(env-data {
   'upgrade: false
  ,'ns: "marmalade"
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
  ,'bob-guard: {"keys": ["bob"], "pred": "keys-all"}
  ,'token_spec: {
    'fungible: coin
    ,'creator: "creator"
    ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
    ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
    ,'royalty-rate: 0.03
    ,'collection-id:"k:2"
    ,'owner: "creator"
  },
  'vehicle_spec: {
    'vin: "2"
    ,'make: "Kadcars"
    ,'model: "K2"
  }
  ,'collection-unique-supply:1337
  ,'collection-id:"k:2"

  })
(env-sigs
  [{'key:'dummy
   ,'caps:
    [(free.universal-ledger.MINT "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "bob" 1.0)
     ]},
   { 'key: 'marmalade-admin
    ,'caps:[]
     },
     { 'key: 'bob
      ,'caps:[]
       }
    ,
    { 'key: 'creator
     ,'caps:[]
      },
      { 'key: 'bob
       ,'caps:[]
        }
   ])

(use kip.token-manifest)
(use free.universal-ledger)
(use free.kadcar-factory)

(expect "Create token Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
  "created token true"
  (free.kadcar-factory.create-k2))
;  (create-token "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" 1
;    (create-manifest (uri "text" "Kadcars-Image-uri") [(create-datum (uri "pact:schema" "kadcars-schema") {"speed":100})]) free.kadcars-nft-policy))

(env-sigs
  [{'key:'mint
   ,'caps:
    [(free.universal-ledger.MINT "Kadcars#K2:2" "bob" 1.0), (coin.TRANSFER "bob" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 1.1)
     ]},
     { 'key: 'bob
      ,'caps:[]
       }])

(expect "mint Kadcars#K2:2 to bob, success"
  true
  (free.kadcar-factory.mint-k2 "Kadcars#K2:2" "bob" (read-keyset 'bob-guard)))

;  (mint 'Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA "bob" (read-keyset 'bob-guard) 1.0))

(expect "Bob is credited"
  1.0
  (get-balance "Kadcars#K2:2" 'bob))
(get-manifest "Kadcars#K2:2")

(expect "Create and mint fqp token EVENTS"
   [{"name": "free.universal-ledger.TOKEN","params": ["Kadcars#K2:2" 0 0.0 free.kadcars-nft-policy]}
   ,{"name": "free.universal-ledger.MINT","params": ["Kadcars#K2:2" "bob" 1.0]}
   ,{"name": "coin.TRANSFER","params": ["bob" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 1.1]}
   ,{"name": "free.universal-ledger.ACCOUNT_GUARD","params": ["Kadcars#K2:2" "bob"  (read-keyset 'bob-guard)]}
   ,{"name": "free.universal-ledger.RECONCILE","params": ["Kadcars#K2:2" 1.0 {"account": "","current": 0.0,"previous": 0.0} {"account": "bob","current": 1.0,"previous": 0.0}]}
   ,{"name": "free.universal-ledger.SUPPLY","params": ["Kadcars#K2:2" 1.0]}]
  (map (remove 'module-hash) (env-events true)))
(format "NOW TESTING NEW ONE" [])

(commit-tx)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; OFFER AND BUYING ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(begin-tx "Sale Offer")

(env-data
 {
  "quote": {
      "price": 10.0
     ,"recipient": "bob"
     ,"recipient-guard": {"keys": ["bob"], "pred":"keys-all"}
   }
 ,"buyer": "coin-buyer"
 ,"buyer-guard": {"keys": ["coin-buyer"], "pred": "keys-all"}
 ,"coin-buyer": {"keys": ["coin-buyer"], "pred": "keys-all"}
 ,'token: "Kadcars#K2:2"
 ,"bob": {"keys": ["bob"], "pred": "keys-all"}
 })
(use free.universal-ledger)
(env-sigs
 [{'key:'bob
  ,'caps:
   [(free.universal-ledger.OFFER (read-msg 'token) "bob" 1.0 120)]}
   ])

 (expect "Sale succeeds"
  true
  (sale (read-msg 'token) 'bob 1.0 120))
(expect "coin balance of coin-buyer is unchanged"
 100.0
 (coin.get-balance 'coin-buyer))

(expect "Seller is debited, sale account is credited Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
 [0.0 1.0]
(map (get-balance (read-msg 'token)) ['bob (sale-account)]))

  (expect "OFFER events"
    [{"name": "free.universal-ledger.OFFER","params": [(read-msg 'token) "bob" 1.0 120]},
     {"name": "free.universal-ledger.SALE","params": [(read-msg 'token) "bob" 1.0 120 (pact-id)]},
     {"name": "free.kadcars-nft-policy.QUOTE","params": [(pact-id) (read-msg 'token) 1.0 10.0 10.0 0.30000000000 "creator" (read-msg "quote")]},
     {"name": "free.universal-ledger.ACCOUNT_GUARD","params": [(read-msg 'token) (sale-account) (create-pact-guard "SALE")]},
     {"name": "free.universal-ledger.TRANSFER","params": [(read-msg 'token) "bob" (sale-account) 1.0]},
     {"name": "free.universal-ledger.RECONCILE","params": [(read-msg 'token) 1.0
     { "account": "bob",
       "current": 0.0,
       "previous": 1.0
     }  { "account": (sale-account),
       "current": 1.0,
       "previous": 0.0
       }]}]
   (map (remove 'module-hash) (env-events true)))


(env-sigs [
 {'key: 'coin-buyer
,'caps: [
 (coin.TRANSFER "coin-buyer" "bob" 10.0)
 (coin.TRANSFER "coin-buyer" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 1.0)
  (free.universal-ledger.BUY "Kadcars#K2:2" "bob" "coin-buyer" 1.0 120 "ZC72yKJMFMI941Gz5JDJcyOhI1XkOptJJqox4w5Qig4")
]}])

(map (coin.get-balance ) ['coin-buyer 'bob 'creator])
(read-keyset 'buyer-guard)
(expect "buy suceeds"
 true
 (continue-pact 1))

(expect "Seller is debited, sale account is debited, buyer is credited on K:2#2 balance"
 [0.0 0.0 1.0]
 (map (get-balance (read-msg 'token)) ['bob (sale-account) 'coin-buyer]))

(expect "coin-buyer is debited on coin balance by price"
 [90.000000000000 107.500000000000 100.0 102.500000000000]
 (map (coin.get-balance ) ['coin-buyer 'bob 'creator "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5"]))


 (expect "minted tokens:"
  [1.0 0.0 1.0 0.0]
  (map (get-account-minted) (get-ledger)))

(expect "k2:2 token balance for coin-buyer:"
 1.0
 (get-balance "Kadcars#K2:2" "coin-buyer"))


 (expect "k2:2 token balance for bob:"
  0.0
  (get-balance "Kadcars#K2:2" "bob"))

  (expect "k2:2 token balance for escrow:"
   0.0
   (get-balance "Kadcars#K2:2" "p:ZC72yKJMFMI941Gz5JDJcyOhI1XkOptJJqox4w5Qig4:SALE"))

(free.kadcars-nft-policy.get-cars-in-collection-by-owner "k:2" "coin-buyer")

(rollback-tx)


(begin-tx)
;;;;;;; TEST WL & FREE MINT ;;;;;;;
(env-data {"john-guard": {"keys": ["john"], "pred": "keys-all"},

'token_spec: {
  'fungible: coin
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
  ,'royalty-rate: 0.03
  ,'collection-id:"k:2"
  ,'owner: "creator"
},
'vehicle_spec: {
  'vin: "3"
  ,'make: "Kadcars"
  ,'model: "K2"
}})

(env-sigs
  [{'key:'mint
   ,'caps:
    [(free.universal-ledger.MINT "Kadcars#K2:3" "john" 1.0), (coin.TRANSFER "john" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 0.0)
     ]},
   { 'key: 'john
    ,'caps:[]
     },
   { 'key: 'creator
    ,'caps:[]
     },
   { 'key: 'marmalade-admin
    ,'caps:[]
     }])

(coin.create-account 'john (read-keyset 'john-guard))

(expect "Create token K2#1"
  "created token true"
  (free.kadcar-factory.create-k2))





(expect "free mint for john "
  true
  (free.kadcars-nft-policy.add-whitelist "john" 1 4
  )
)

(expect "mint Kadcars#K2:3 to john, success"
  true
(free.kadcar-factory.mint-k2 "Kadcars#K2:3" "john" (read-keyset 'john-guard)))

(expect "john loses 0"
 [100.0
 ]
 (map (coin.get-balance ) ['john]))

 (free.kadcars-nft-policy.get-account-records-info "john")

(commit-tx)



(begin-tx)

(env-data {"john-guard": {"keys": ["john"], "pred": "keys-all"},

'token_spec: {
  'fungible: coin
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
  ,'royalty-rate: 0.03
  ,'collection-id:"k:2"
  ,'owner: "creator"
},
'vehicle_spec: {
  'vin: "4"
  ,'make: "Kadcars"
  ,'model: "K2"
}})


(env-sigs
  [{'key:'mint
   ,'caps:
    [(free.universal-ledger.MINT "Kadcars#K2:4" "john" 1.0), (coin.TRANSFER "john" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 1.1)
     ]},
   { 'key: 'john
    ,'caps:[]
     },
   { 'key: 'creator
    ,'caps:[]
     },
   { 'key: 'marmalade-admin
    ,'caps:[]
     }])

(expect "Create token K2#1"
  "created token true"
  (free.kadcar-factory.create-k2))


(expect "mint Kadcars#K2:4 to john, success"
    true
(free.kadcar-factory.mint-k2 "Kadcars#K2:4" "john" (read-keyset 'john-guard)))

(expect "john loses 1.1 for WL price"
 [98.9
 ]
 (map (coin.get-balance ) ['john]))

(commit-tx)


;;;;; TESTING BULK MINT ;;;;;


(begin-tx)

(env-sigs
  [{'key:'mint
   ,'caps:
    [(free.universal-ledger.MINT "Kadcars#K2:5" "john" 1.0),
     (coin.TRANSFER "john" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 2.2),
     (free.universal-ledger.MINT "Kadcars#K2:6" "john" 1.0)

     ]},
   { 'key: 'john
    ,'caps:[]
     },
   { 'key: 'creator
    ,'caps:[]
     },
   { 'key: 'marmalade-admin
    ,'caps:[]
     }])
(env-data {"john-guard": {"keys": ["john"], "pred": "keys-all"},

'token_spec: {
  'fungible: coin
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
  ,'royalty-rate: 0.03
  ,'collection-id:"k:2"
  ,'owner: "creator"
},
'vehicle_spec: {
  'vin: "5"
  ,'make: "Kadcars"
  ,'model: "K2"
}})


(expect "Create token Kadcars#K2:5"
  "created token true"
  (free.kadcar-factory.create-k2))

(env-data {"john-guard": {"keys": ["john"], "pred": "keys-all"},

'token_spec: {
  'fungible: coin
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
  ,'royalty-rate: 0.03
  ,'collection-id:"k:2"
  ,'owner: "creator"
},
'token-list:["Kadcars#K2:5" "Kadcars#K2:6"],
'vehicle_spec: {
  'vin: "6"
  ,'make: "Kadcars"
  ,'model: "K2"
}})


(expect "Create token Kadcars#K2:6"
  "created token true"
  (free.kadcar-factory.create-k2))

(expect "minted bulk"
    ["Kadcars#K2:5" "Kadcars#K2:6"]
(free.kadcar-factory.mint-bulk
   "john" (read-keyset 'john-guard)))




(expect "k2:2 token balance for john token 1.0"
  1.0
  (free.universal-ledger.get-balance "Kadcars#K2:6" "john"))


;;;;; CREATING TOKEN TO TEST NON_MINTED_TOKENS RETRIEVAL

  (env-data {"john-guard": {"keys": ["john"], "pred": "keys-all"},

  'token_spec: {
    'fungible: coin
    ,'creator: "creator"
    ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
    ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
    ,'royalty-rate: 0.03
    ,'collection-id:"k:2"
    ,'owner: "creator"
  },
  'token-list:["Kadcars#K2:ruXzFce2JXP7_7lxqvXlmwcbdtI-qZ1Zr3cm6gANMoU" "Kadcars#K2:RIbk5Ww0A_soi4_v-Zphlezfe5eGyXOwatbUfJqjAVo"],
  'vehicle_spec: {
    'vin: "7"
    ,'make: "Kadcars"
    ,'model: "K2"
  }})

(expect "Create token K2#1"
  "created token true"

  (free.kadcar-factory.create-k2))



(commit-tx)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; BELOW RATE ADJUSTED ROYALTY OFFER AND BUYING ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(begin-tx "Reduced price Sale Offer")

(env-data
 {
  "quote": {
      "price": 7.0
     ,"recipient": "bob"
     ,"recipient-guard": {"keys": ["bob"], "pred":"keys-all"}
   }
 ,"buyer": "coin-buyer"
 ,"buyer-guard": {"keys": ["coin-buyer"], "pred": "keys-all"}
 ,"coin-buyer": {"keys": ["coin-buyer"], "pred": "keys-all"}
 ,'token: "Kadcars#K2:6"
 ,"bob": {"keys": ["bob"], "pred": "keys-all"}
 })
(use free.universal-ledger)
(env-sigs
 [{'key:'john
  ,'caps:
   [(free.universal-ledger.OFFER (read-msg 'token) "john" 1.0 120)]}
   ])
(expect "Sale succeeds"
  true
  (sale (read-msg 'token) 'john 1.0 120))

(expect "Seller is debited, sale account is credited Kadcars#K2:ruXzFce2JXP7_7lxqvXlmwcbdtI-qZ1Zr3cm6gANMoU"
 [0.0 1.0]
(map (get-balance (read-msg 'token)) ['john (sale-account)]))

  (expect "OFFER events"
    [{"name": "free.universal-ledger.OFFER","params": [(read-msg 'token) "john" 1.0 120]},
     {"name": "free.universal-ledger.SALE","params": [(read-msg 'token) "john" 1.0 120 (pact-id)]},
     {"name": "free.kadcars-nft-policy.QUOTE","params": [(pact-id) (read-msg 'token) 1.0 7.0 7.0 0.35000000000 "creator" (read-msg "quote")]},
     {"name": "free.universal-ledger.ACCOUNT_GUARD","params": [(read-msg 'token) (sale-account) (create-pact-guard "SALE")]},
     {"name": "free.universal-ledger.TRANSFER","params": [(read-msg 'token) "john" (sale-account) 1.0]},
     {"name": "free.universal-ledger.RECONCILE","params": [(read-msg 'token) 1.0
     { "account": "john",
       "current": 0.0,
       "previous": 1.0
     }  { "account": (sale-account),
       "current": 1.0,
       "previous": 0.0
       }]}]
   (map (remove 'module-hash) (env-events true)))


(env-sigs [
 {'key: 'coin-buyer
,'caps: [
 (coin.TRANSFER "coin-buyer" "bob" 10.0)
 (coin.TRANSFER "coin-buyer" "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5" 1.0)
  (free.universal-ledger.BUY "Kadcars#K2:6" "john" "coin-buyer" 1.0 120 "ZC72yKJMFMI941Gz5JDJcyOhI1XkOptJJqox4w5Qig4")
]}])

(read-keyset 'buyer-guard)
(expect "buy suceeds"
 true
 (continue-pact 1))

(expect "Seller is debited, sale account is debited, buyer is credited on K:2#2 balance"
 [0.0 0.0 1.0]
 (map (get-balance (read-msg 'token)) ['john (sale-account) 'coin-buyer]))

(expect "coin-buyer is debited on coin balance by price"
 [93.000000000000 104.450000000000 100.0 105.850000000000]
 (map (coin.get-balance ) ['coin-buyer 'bob 'creator "k:f157854c15e9bb8fb55aafdecc1ce27a3d60973cbe6870045f4415dc06be06f5"]))


 (expect "minted tokens:"
  [1.0 1.0 1.0 1.0 1.0 1.0 0.0 0.0]
  (map (get-account-minted ) (get-ledger)))


(expect "k2:2 token balance for coin-buyer:"
 1.0
 (get-balance "Kadcars#K2:6" "coin-buyer"))


 (expect "k2:2 token balance for john:"
  0.0
  (get-balance "Kadcars#K2:6" "john"))

  (expect "k2:2 token balance for escrow:"
   0.0

   (get-balance "Kadcars#K2:6" "p:ZC72yKJMFMI941Gz5JDJcyOhI1XkOptJJqox4w5Qig4:SALE"))

(rollback-tx)



(free.kadcars-nft-policy.get-minted-tokens-for-collection "k:2")
(free.kadcars-nft-policy.get-non-minted-tokens-for-collection "k:2")
